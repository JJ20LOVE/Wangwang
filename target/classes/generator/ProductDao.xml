<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itcaptain.ecnutrade.dao.ProductDao">
  <resultMap id="BaseResultMap" type="com.itcaptain.ecnutrade.pojo.Product">
    <id column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="seller_id" jdbcType="INTEGER" property="sellerId" />
    <result column="buyer_id" jdbcType="INTEGER" property="buyerId" />
    <result column="product_state" jdbcType="INTEGER" property="productState" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.itcaptain.ecnutrade.pojo.ProductWithBLOBs">
    <result column="product_name" jdbcType="LONGVARCHAR" property="productName" />
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
    <result column="picture" jdbcType="LONGVARCHAR" property="picture" />
    <result column="categories" jdbcType="LONGVARCHAR" property="categories" />
    <result column="campus" jdbcType="LONGVARCHAR" property="campus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    product_id, price, seller_id, buyer_id, product_state
  </sql>
  <sql id="Blob_Column_List">
    product_name, description, picture, categories, campus
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.itcaptain.ecnutrade.pojo.ProductExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByExample" parameterType="com.itcaptain.ecnutrade.pojo.ProductExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from product
    where product_id = #{productId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from product
    where product_id = #{productId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.itcaptain.ecnutrade.pojo.ProductExample">
    delete from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="product_id" keyProperty="productId" parameterType="com.itcaptain.ecnutrade.pojo.ProductWithBLOBs" useGeneratedKeys="true">
    insert into product (price, seller_id, buyer_id, 
      product_state, product_name, description, 
      picture, categories, campus
      )
    values (#{price,jdbcType=DECIMAL}, #{sellerId,jdbcType=INTEGER}, #{buyerId,jdbcType=INTEGER}, 
      #{productState,jdbcType=INTEGER}, #{productName,jdbcType=LONGVARCHAR}, #{description,jdbcType=LONGVARCHAR}, 
      #{picture,jdbcType=LONGVARCHAR}, #{categories,jdbcType=LONGVARCHAR}, #{campus,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="product_id" keyProperty="productId" parameterType="com.itcaptain.ecnutrade.pojo.ProductWithBLOBs" useGeneratedKeys="true">
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="price != null">
        price,
      </if>
      <if test="sellerId != null">
        seller_id,
      </if>
      <if test="buyerId != null">
        buyer_id,
      </if>
      <if test="productState != null">
        product_state,
      </if>
      <if test="productName != null">
        product_name,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="picture != null">
        picture,
      </if>
      <if test="categories != null">
        categories,
      </if>
      <if test="campus != null">
        campus,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="sellerId != null">
        #{sellerId,jdbcType=INTEGER},
      </if>
      <if test="buyerId != null">
        #{buyerId,jdbcType=INTEGER},
      </if>
      <if test="productState != null">
        #{productState,jdbcType=INTEGER},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=LONGVARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="picture != null">
        #{picture,jdbcType=LONGVARCHAR},
      </if>
      <if test="categories != null">
        #{categories,jdbcType=LONGVARCHAR},
      </if>
      <if test="campus != null">
        #{campus,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.itcaptain.ecnutrade.pojo.ProductExample" resultType="java.lang.Long">
    select count(*) from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product
    <set>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.sellerId != null">
        seller_id = #{record.sellerId,jdbcType=INTEGER},
      </if>
      <if test="record.buyerId != null">
        buyer_id = #{record.buyerId,jdbcType=INTEGER},
      </if>
      <if test="record.productState != null">
        product_state = #{record.productState,jdbcType=INTEGER},
      </if>
      <if test="record.productName != null">
        product_name = #{record.productName,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.picture != null">
        picture = #{record.picture,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.categories != null">
        categories = #{record.categories,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.campus != null">
        campus = #{record.campus,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update product
    set product_id = #{record.productId,jdbcType=INTEGER},
      price = #{record.price,jdbcType=DECIMAL},
      seller_id = #{record.sellerId,jdbcType=INTEGER},
      buyer_id = #{record.buyerId,jdbcType=INTEGER},
      product_state = #{record.productState,jdbcType=INTEGER},
      product_name = #{record.productName,jdbcType=LONGVARCHAR},
      description = #{record.description,jdbcType=LONGVARCHAR},
      picture = #{record.picture,jdbcType=LONGVARCHAR},
      categories = #{record.categories,jdbcType=LONGVARCHAR},
      campus = #{record.campus,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product
    set product_id = #{record.productId,jdbcType=INTEGER},
      price = #{record.price,jdbcType=DECIMAL},
      seller_id = #{record.sellerId,jdbcType=INTEGER},
      buyer_id = #{record.buyerId,jdbcType=INTEGER},
      product_state = #{record.productState,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.itcaptain.ecnutrade.pojo.ProductWithBLOBs">
    update product
    <set>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="sellerId != null">
        seller_id = #{sellerId,jdbcType=INTEGER},
      </if>
      <if test="buyerId != null">
        buyer_id = #{buyerId,jdbcType=INTEGER},
      </if>
      <if test="productState != null">
        product_state = #{productState,jdbcType=INTEGER},
      </if>
      <if test="productName != null">
        product_name = #{productName,jdbcType=LONGVARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="picture != null">
        picture = #{picture,jdbcType=LONGVARCHAR},
      </if>
      <if test="categories != null">
        categories = #{categories,jdbcType=LONGVARCHAR},
      </if>
      <if test="campus != null">
        campus = #{campus,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where product_id = #{productId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.itcaptain.ecnutrade.pojo.ProductWithBLOBs">
    update product
    set price = #{price,jdbcType=DECIMAL},
      seller_id = #{sellerId,jdbcType=INTEGER},
      buyer_id = #{buyerId,jdbcType=INTEGER},
      product_state = #{productState,jdbcType=INTEGER},
      product_name = #{productName,jdbcType=LONGVARCHAR},
      description = #{description,jdbcType=LONGVARCHAR},
      picture = #{picture,jdbcType=LONGVARCHAR},
      categories = #{categories,jdbcType=LONGVARCHAR},
      campus = #{campus,jdbcType=LONGVARCHAR}
    where product_id = #{productId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.itcaptain.ecnutrade.pojo.Product">
    update product
    set price = #{price,jdbcType=DECIMAL},
      seller_id = #{sellerId,jdbcType=INTEGER},
      buyer_id = #{buyerId,jdbcType=INTEGER},
      product_state = #{productState,jdbcType=INTEGER}
    where product_id = #{productId,jdbcType=INTEGER}
  </update>
</mapper>